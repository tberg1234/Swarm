<?xml version="1.0" ?>

<!-- *************************************************** -->
<!-- * A fully commented XML is diffusion_1.xml. Refer * -->
<!-- * to it to have full information about what       * -->
<!-- * these options mean.                             * -->
<!-- *************************************************** -->

<argos-configuration>

  <!-- ************************* -->
  <!-- * General configuration * -->
  <!-- ************************* -->
  <framework>
    <system threads="0" />
    <experiment length="0"
                ticks_per_second="10"
                random_seed="124" />
  </framework>

  <!-- *************** -->
  <!-- * Controllers * -->
  <!-- *************** -->
  <controllers>

    <buzz_controller_kheperaiv id="explore">
        <actuators>
          <differential_steering implementation="default" />
          <leds                  implementation="default" medium="leds" />
          <range_and_bearing     implementation="default" />
        </actuators>
        <sensors>
          <kheperaiv_proximity implementation="default" show_rays="true" />
          <range_and_bearing   implementation="medium" medium="rab"
                               show_rays="true" noise_std_dev="0" />
          <positioning         implementation="default" />
          <kheperaiv_ground implementation="rot_z_only" />
          <kheperaiv_light   implementation="rot_z_only" />
        </sensors>
        <params>
          <wheel_turning hard_turn_angle_threshold="90"
                         soft_turn_angle_threshold="70"
                         no_turn_angle_threshold="10"
                         max_speed="10" />
        </params>
      </buzz_controller_kheperaiv>

  </controllers>

  <!-- ****************** -->
  <!-- * Loop functions * -->
  <!-- ****************** -->
  <loop_functions library="build/libbackbone_loop_functions"
                  label="backbone_loop_functions">
    <!--<backbone />-->
  </loop_functions>


  <!-- *********************** -->
  <!-- * Arena configuration * -->
  <!-- *********************** -->
  <arena size="5,5, 1" center="0,0,0.5">

    <floor id="floor"
           source="loop_functions"
           pixels_per_meter="50" />

    <box id="wall_north" size="4,0.1,0.5" movable="false">
      <body position="0,2,0" orientation="0,0,0" />
    </box>
    <box id="wall_south" size="4,0.1,0.5" movable="false">
      <body position="0,-2,0" orientation="0,0,0" />
    </box>
    <box id="wall_east" size="0.1,4,0.5" movable="false">
      <body position="2,0,0" orientation="0,0,0" />
    </box>
    <box id="wall_west" size="0.1,4,0.5" movable="false">
      <body position="-2,0,0" orientation="0,0,0" />
    </box>

    <!-- object to identify-->
    <box id="object_1" size="0.3,0.3,0.5" movable="false" >
      <body position="0.5,0.5,0" orientation="0,0,0"/>
    </box>

    <light id="light"
           position="0.5,0.5,0.7"
           orientation="0,0,0"
           color="yellow"
           intensity="3.0"
           medium="light" />

    <!--<cylinder id="c" height="0.5" radius="0.15" movable="false">
      <body positon="2,2,0" orientation="0,0,0"/>
    </cylinder>-->


    <distribute>
      <position method="uniform" min="-2,-0.5,0" max="-1.5,0.5,0" />
      <orientation method="gaussian" mean="0,0,0" std_dev="360,0,0" />
      <entity quantity="10" max_trials="100">
        <kheperaiv id="kiv" rab_data_size="1000">
          <controller config="explore" />
        </kheperaiv>
      </entity>
    </distribute>

  </arena>

  <!-- ******************* -->
  <!-- * Physics engines * -->
  <!-- ******************* -->
  <physics_engines>
    <dynamics2d id="dyn2d" />
  </physics_engines>

  <!-- ********* -->
  <!-- * Media * -->
  <!-- ********* -->
  <media>
    <range_and_bearing id="rab" />
    <led id="leds" />
    <led id="light" />
  </media>

  <!-- ****************** -->
  <!-- * Visualization * -->
  <!-- ****************** -->
  <visualization>
    <qt-opengl>
      <user_functions label="buzz_qt" />
    </qt-opengl>
  </visualization>

    <!--
        This shows how to add customized drawing in the world
        using the qt user functions.
        Check 'argos3 -q qt-opengl' for more help.
    -->
    <!--<qt-opengl>
      <user_functions library="build/loop_functions/id_loop_functions/libid_loop_functions"
                      label="id_qtuser_functions" />
    </qt-opengl>
  </visualization>-->

</argos-configuration>
